---
interface Props {
  title?: string
  description?: string
  price?: string
  discount?: string
  benefits?: string[]
}

const { title, description, benefits, price, discount } = Astro.props

const priceClass = discount === 'pack' ? 'text-white text-4xl bling' : 'text-don-gold'

const spanClass =
  discount === 'student'
    ? 'col-span-6 lg:col-span-6'
    : discount === 'pack'
      ? 'col-span-10'
      : 'col-span-5 lg:col-span-4'

const badgeText =
  discount === 'pack' ? 'âœ¨ Paquete Especial' : discount === 'student' ? 'ðŸŽ“ Estudiantes' : null
---

<article
  id='BentoReveal'
  role='region'
  aria-label={`Servicio ${title}`}
  class={`relative rounded-xl border border-black/10 shadow-inner shadow-white/10 overflow-hidden group backdrop-blur-md col-span-10 md:${spanClass}`}
>
  <!-- Fondo oscuro transparente -->
  <div class='absolute inset-0 z-10 bg-black/50 pointer-events-none'></div>

  <!-- Imagen de fondo vÃ­a slot -->
  <slot name='image' />
  <!-- Badge visual -->
  {
    badgeText && (
      <div class='absolute top-4 left-4 z-30 bg-don-gold text-black text-xs sm:text-sm px-3 py-1 rounded-full font-semibold shadow-lg animate-fade-in'>
        {badgeText}
      </div>
    )
  }

  <!-- Contenido -->
  <div class='relative z-20 flex h-full flex-col justify-end gap-1 md:gap-3 p-4 md:p-6 text-white'>
    <h3 class='text-3xl font-bold uppercase text-don-gold mb-2 text-balance'>
      {title}
    </h3>

    <p class='text-base md:text-lg max-w-xl leading-relaxed'>
      {description}
    </p>

    {
      benefits && benefits.length > 0 && (
        <ul class='grid grid-cols-2 gap-x-3 gap-y-1 text-sm sm:text-base mt-2 list-disc list-inside text-white/90'>
          {benefits.map(benefit => (
            <li>{benefit}</li>
          ))}
        </ul>
      )
    }

    <p class='mt-4 text-lg text-balance'>
      <strong class={priceClass}>${price} MXN</strong>
      {discount === 'student' && <span class='text-don-gold'> (Descuento estudiantes)</span>}
    </p>
  </div>
</article>

<style>
  #BentoReveal {
    animation: reveal linear both;
    animation-timeline: view();
    animation-range: entry 20% cover 40%;
  }

  @keyframes reveal {
    from {
      opacity: 0;
      transform: translateY(100px) scale(0.5);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
</style>
